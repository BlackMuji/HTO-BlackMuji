import{ag as a}from"./index-CivGSquN.js";const n=async s=>{try{return(await a.post("/machines",s)).data}catch(e){throw e.response?e.response.data:new Error("Failed to create machine")}},o=async()=>{try{return(await a.get("/machines")).data}catch(s){throw s.response?s.response.data:new Error("Failed to fetch machines")}},c=async()=>{try{return(await a.get("/machines/active")).data}catch(s){throw s.response?s.response.data:new Error("Failed to fetch active machines")}},i=async s=>{try{return(await a.post(`/machines/${s}/active`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to activate machine")}},h=async s=>{try{return(await a.post(`/machines/${s}/deactive`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to deactivate machine")}},p=async s=>{try{return(await a.get(`/machines/active/${s}`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to fetch machine details")}},d=async s=>{try{return(await a.delete(`/machines/${s}`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to delete machine")}},w=async s=>{try{return(await a.get(`/machines/${s}/hints`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to fetch machine hints")}},m=async s=>{try{return(await a.get(`/machines/${s}/used-hints`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to fetch used hints")}},y=async(s,e)=>{try{return(await a.post(`/machines/${s}/submit-flag`,{flag:e})).data}catch(t){throw t.response?t.response.data:new Error("Failed to submit flag")}},l=async(s,e)=>{try{return(await a.post(`/machines/${s}/review`,e)).data}catch(t){throw t.response?t.response.data:new Error("Failed to post machine review")}},g=async s=>{try{return(await a.get(`/machines/${s}/reviews`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to fetch machine reviews")}},u=async s=>{try{return(await a.post(`/machines/${s}/give-up`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to give up machine")}},v=async s=>{try{return(await a.post(`/machines/${s}/start-play`)).data}catch(e){throw e.response?e.response.data:new Error("Failed to start playing machine")}},F=async()=>{try{return(await a.get("/machines/latest")).data}catch(s){throw s.response?s.response.data:new Error("Failed to fetch latest machine")}},E=async()=>{try{return(await a.get("/machines/most-played")).data}catch(s){throw s.response?s.response.data:new Error("Failed to fetch most played machine")}};export{F as a,E as b,g as c,p as d,n as e,m as f,c as g,w as h,y as i,u as j,o as k,i as l,h as m,d as n,l as p,v as s};
//# sourceMappingURL=axiosMachine-BVJLXleH.js.map
