{"version":3,"file":"LeaderBoardPage-CVuAWc8i.js","sources":["../../src/components/leaderboard/LeaderboardTable.tsx","../../src/pages/leaderboard/LeaderBoardPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from '../../assets/scss/leaderboard/LeaderboardTable.module.scss';\r\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\r\n\r\nimport CurrentUserInfo from './CurrentUserInfo'; // Import the new component\r\nimport { CurrentUser } from '../../types/CurrentUser'; // Import the CurrentUser interface\r\nimport { User } from '../../types/User'; // Import the User interface\r\nimport { FaMedal } from \"react-icons/fa\";\r\nimport { Avatar } from '@mui/material';\r\nimport { avatarBackgroundColors } from '../../utils/avatars';\r\nimport { getAvatarColorIndex } from '../../utils/avatars';\r\n\r\ninterface LeaderboardTableProps {\r\n    leaderboard: User[];\r\n    currentUser: CurrentUser; // Grouped current user information\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 8; // Number of users to display per page\r\n\r\nconst LeaderboardTable: React.FC<LeaderboardTableProps> = ({ leaderboard, currentUser }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    // Calculate total number of pages\r\n    const totalPages = Math.ceil(leaderboard.length / ITEMS_PER_PAGE);\r\n\r\n    // Get users for the current page\r\n    const startIdx = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    const currentLeaderboard = leaderboard.slice(startIdx, startIdx + ITEMS_PER_PAGE);\r\n\r\n    // Function to handle page changes\r\n    const handlePageChange = (page: number) => {\r\n        if (page > 0 && page <= totalPages) {\r\n            setCurrentPage(page);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.board}>\r\n            <div className={styles.leaderboard_container}>\r\n                {/* Current user information */}\r\n                <CurrentUserInfo\r\n                    currentUser={currentUser}\r\n                />\r\n\r\n                {/* Leaderboard Table */}\r\n                <div className={styles.leaderboard_table}>\r\n                    {currentLeaderboard.length > 0 ? (\r\n                        currentLeaderboard.map((user, index) => {\r\n                            const avatarColorIndex = getAvatarColorIndex(user.username);\r\n                            const avatarBgColor = avatarBackgroundColors[avatarColorIndex];\r\n                            return (\r\n                                <div className={styles.leaderboard_data} key={`${user._id}-${index}`}>\r\n                                    <div className={styles.leaderboard_rank}>\r\n                                        {/* 메달 아이콘과 순위 번호 함께 표시 */}\r\n                                        {index === 0 ? (\r\n                                            <>\r\n                                                <FaMedal className={styles.goldMedal} size={32}/>\r\n                                                <span className={styles.high_rank}>{startIdx + index + 1}</span>\r\n                                            </>\r\n                                        ) : index === 1 ? (\r\n                                            <>\r\n                                                <FaMedal className={styles.silverMedal} size={32}/>\r\n                                                <span className={styles.high_rank}>{startIdx + index + 1}</span>\r\n                                            </>\r\n                                        ) : index === 2 ? (\r\n                                            <>\r\n                                                <FaMedal className={styles.bronzeMedal} size={32}/>\r\n                                                <span className={styles.high_rank}>{startIdx + index + 1}</span>\r\n                                            </>\r\n                                        ) : (\r\n                                            `${startIdx + index + 1}` // 4위 이후는 순위만 표시\r\n                                        )}\r\n                                    </div>\r\n                                    <div className={styles.leaderboard_level}>LV. {user.level}</div>\r\n                                    <div className={styles.leaderboard_userinfo}>\r\n                                        <Avatar alt={user.username} sx={{ width: 50, height: 50, backgroundColor: avatarBgColor }}>\r\n                                            {user.username.charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                        <div className={styles.leaderboard_username}>{user.username}</div>\r\n                                    </div>\r\n                                    <div className={styles.leaderboard_exp}>{user.exp}</div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div key=\"no-users-found\">\r\n                            <div className=\"no-data\">No users found</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Pagination Buttons */}\r\n                <div className={styles.pagination}>\r\n                    <button\r\n                        className={styles.page_button}\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                        disabled={currentPage === 1}\r\n                    >\r\n                        <IoIosArrowBack />\r\n                    </button>\r\n                    {Array.from({ length: totalPages }, (_, i) => (\r\n                        <button\r\n                            key={i}\r\n                            className={`${styles.number_button} ${currentPage === i + 1 ? styles.active : ''}`}\r\n                            onClick={() => handlePageChange(i + 1)}\r\n                        >\r\n                            {i + 1}\r\n                        </button>\r\n                    ))}\r\n                    <button\r\n                        className={styles.page_button}\r\n                        onClick={() => handlePageChange(currentPage + 1)}\r\n                        disabled={currentPage === totalPages}\r\n                    >\r\n                        <IoIosArrowForward />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaderboardTable;\r\n","// frontend/src/pages/leaderboard/LeaderBoardPage.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getLeaderboard, getMyRank } from '../../api/axiosUser';\r\nimport LeaderboardTable from '../../components/leaderboard/LeaderboardTable';\r\nimport Main from '../../components/main/Main';\r\nimport { User } from '../../types/User';\r\nimport { CurrentUser } from '../../types/CurrentUser';\r\n\r\n\r\n\r\n/**\r\n * Component representing the LeaderBoard Page.\r\n */\r\nconst LeaderBoardPage: React.FC = () => {\r\n  const [leaderboard, setLeaderboard] = useState<User[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [currentUser, setCurrentUser] = useState<CurrentUser>({\r\n    _id: '',\r\n    myRank: null,\r\n    myLevel: null,\r\n    myExp: null,\r\n    myUsername: null,\r\n    myAvatar: null,\r\n  });\r\n\r\n  /**\r\n   * Fetches the leaderboard data from the API.\r\n   */\r\n  useEffect(() => {\r\n    const fetchLeaderboard = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getLeaderboard();\r\n        console.log('Leaderboard API Response:', response); // Debugging log\r\n\r\n        // Adjust based on actual response structure\r\n        // Example: If response.users is the array\r\n        if (response && Array.isArray(response.users)) {\r\n          setLeaderboard(response.users);\r\n        } else if (response && Array.isArray(response.data)) {\r\n          setLeaderboard(response.data);\r\n        } else if (Array.isArray(response)) {\r\n          setLeaderboard(response);\r\n        } else {\r\n          console.error('Unexpected leaderboard data structure:', response);\r\n          setLeaderboard([]); // Fallback to empty array\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error fetching leaderboard:', error.message || error);\r\n        setError('Failed to fetch leaderboard data.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLeaderboard(); // Invoke the data fetching\r\n  }, []);\r\n\r\n  /**\r\n   * Fetches the current user's rank and information from the API.\r\n   */\r\n  useEffect(() => {\r\n    const fetchMyRank = async () => {\r\n      try {\r\n        const response = await getMyRank();\r\n        console.log('My Rank API Response:', response); // Debugging log\r\n\r\n        // Adjust based on actual response structure\r\n        // Example:\r\n        if (response && response.myRank !== undefined && response.user) {\r\n          setCurrentUser({\r\n            _id: response.user._id,\r\n            myRank: response.myRank,\r\n            myLevel: response.user.level,\r\n            myExp: response.user.exp,\r\n            myUsername: response.user.username,\r\n            myAvatar: response.user.avatar,\r\n          });\r\n        } else {\r\n          console.error('Unexpected myRank data structure:', response);\r\n          setError('Failed to fetch my rank data.');\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error fetching my rank:', error.message || error);\r\n        setError('Failed to fetch my rank data.');\r\n      }\r\n    };\r\n    fetchMyRank();\r\n  }, []);\r\n\r\n  return (\r\n    <Main title=\"LeaderBoard\" description=\"LeaderBoard 화면입니다.\">\r\n      <div className=\"leaderboard-page\">\r\n        {loading && <p>Loading leaderboard...</p>}\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {!loading && !error && (\r\n          <LeaderboardTable \r\n            leaderboard={leaderboard} \r\n            currentUser={currentUser} \r\n          />\r\n        )}\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default LeaderBoardPage;"],"names":["ITEMS_PER_PAGE","LeaderboardTable","leaderboard","currentUser","currentPage","setCurrentPage","useState","totalPages","startIdx","currentLeaderboard","handlePageChange","page","jsx","styles","jsxs","CurrentUserInfo","user","index","avatarColorIndex","getAvatarColorIndex","avatarBgColor","avatarBackgroundColors","Fragment","FaMedal","Avatar","IoIosArrowBack","_","i","IoIosArrowForward","LeaderBoardPage","setLeaderboard","error","setError","loading","setLoading","setCurrentUser","useEffect","response","getLeaderboard","getMyRank","Main"],"mappings":"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"}