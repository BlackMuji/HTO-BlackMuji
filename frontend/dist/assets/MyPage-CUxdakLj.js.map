{"version":3,"file":"MyPage-CUxdakLj.js","sources":["../../src/components/mypage/PasswordCheckForm.tsx","../../src/api/axiosMulti.tsx","../../src/components/mypage/PersonalInfoForm.tsx","../../src/components/mypage/toAdmin.tsx","../../src/pages/user/MyPage.tsx"],"sourcesContent":["import React, { useState, FormEvent } from 'react';\r\nimport '../../assets/scss/mypage/mypage.scss';\r\n\r\ninterface PasswordCheckFormProps {\r\n  onSubmit: (password: string) => void;\r\n}\r\n\r\n/**\r\n * Form component for verifying the user's password.\r\n */\r\nconst PasswordCheckForm: React.FC<PasswordCheckFormProps> = ({ onSubmit }) => {\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  /**\r\n   * Handles form submission for password verification.\r\n   * @param e - The form event.\r\n   */\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    onSubmit(password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"lower-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>비밀번호 확인</h2>\r\n        <p>개인정보 수정을 위해 비밀번호를 입력해주세요.</p>\r\n        <input\r\n          className=\"pw-input\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"비밀번호\"\r\n          required\r\n        />\r\n        <button className=\"pw-submit\" type=\"submit\">\r\n          확인\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordCheckForm;\r\n\r\n","import axios from 'axios';\r\n\r\n// axios 인스턴스 생성. 모든 요청에 사용됩니다.\r\nconst axiosMulti = axios.create({\r\n  baseURL: import.meta.env.VITE_API_URL,\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data', // 요청 헤더에 Content-Type을 multipart/form-data으로 설정\r\n  },\r\n  withCredentials: true, // 인스턴스 레벨에서 withCredentials 설정\r\n});\r\n\r\n/**\r\n * Update user avatar.\r\n * @param {string} avatar - The avatar to update.\r\n * @returns {Promise<Object>} - The response data confirming update.\r\n */\r\nexport const updateUserAvatar = async (avatar: any) => {\r\n  try {\r\n    const response = await axiosMulti.post('/user/update/avatar', { avatar });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    throw new Error('Failed to update user avatar');\r\n  }\r\n};\r\n\r\nexport default axiosMulti;\r\n","import React, { useState, useEffect, FormEvent, ChangeEvent } from 'react';\r\nimport {\r\n  changePassword,\r\n  changeName,\r\n  getUserDetail,\r\n} from '../../api/axiosUser';\r\nimport { updateUserAvatar } from '../../api/axiosMulti';\r\nimport '../../assets/scss/mypage/PersonalInfoForm.scss';\r\nimport { Avatar } from '@mui/material';\r\nimport { getAvatarColorIndex } from '../../utils/avatars';\r\nimport { avatarBackgroundColors } from '../../utils/avatars';\r\ninterface UserData {\r\n  id: string;\r\n  email: string;\r\n  username: string;\r\n  avatar: string;\r\n  exp: number;\r\n  level: number;\r\n}\r\n\r\nconst PersonalInfoForm: React.FC = () => {\r\n  const [userData, setUserData] = useState<UserData>({\r\n    id: '',\r\n    email: '',\r\n    username: '',\r\n    avatar: '',\r\n    exp: 0,\r\n    level: 0,\r\n  });\r\n  const [username, setUsername] = useState<string>('');\r\n  const [newPassword, setNewPassword] = useState<string>('');\r\n  const [oldPassword, setOldPassword] = useState<string>('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState<string>('');\r\n  const [avatar, setAvatar] = useState<File | null>(null);\r\n\r\n  /**\r\n   * Fetches user details from the API.\r\n   */\r\n  const fetchUserDetail = async (): Promise<void> => {\r\n    try {\r\n      const response = await getUserDetail();\r\n      setUserData(response.user);\r\n    } catch (error) {\r\n      console.error('Error fetching user details:', error);\r\n      alert('사용자 정보를 불러오는 데 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserDetail();\r\n  }, []);\r\n\r\n  /**\r\n   * Handles password change form submission.\r\n   * @param e - The form event.\r\n   */\r\n  const handlePasswordChange = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmNewPassword) {\r\n      alert('새 비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    }\r\n    try {\r\n      await changePassword(oldPassword, newPassword);\r\n      alert('비밀번호가 성공적으로 변경되었습니다.');\r\n      setNewPassword('');\r\n      setOldPassword('');\r\n      setConfirmNewPassword('');\r\n      //refresh\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Error changing password:', error);\r\n      alert('비밀번호 변경에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles name change form submission.\r\n   * @param e - The form event.\r\n   */\r\n  const handleNameChange = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    e.preventDefault();\r\n    try {\r\n      await changeName(username);\r\n      alert('이름이 성공적으로 변경되었습니다.');\r\n      // Optionally, refetch user data to reflect changes\r\n      fetchUserDetail();\r\n      setUsername('');\r\n      //refresh\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Error changing name:', error);\r\n      alert('이름 변경에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles avatar change form submission.\r\n   * @param e - The form event.\r\n   */\r\n  const handleAvatarChange = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    e.preventDefault();\r\n    if (!avatar) {\r\n      alert('업로드할 파일을 선택해주세요.');\r\n      return;\r\n    }\r\n    try {\r\n      await updateUserAvatar(avatar);\r\n      alert('아바타가 성공적으로 변경되었습니다.');\r\n      // Optionally, refetch user data to reflect changes\r\n      fetchUserDetail();\r\n      setAvatar(null);\r\n      //refresh\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Error changing avatar:', error);\r\n      alert('아바타 변경에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles file input change for avatar upload.\r\n   * @param e - The change event.\r\n   */\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const avatarColorIndex = getAvatarColorIndex(userData.username);\r\n  const avatarBgColor = avatarBackgroundColors[avatarColorIndex];\r\n\r\n  return (\r\n    <div className=\"personalInfo-container\">\r\n      <div className=\"info-container\">\r\n        <div className=\"avatar-container\">\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: avatarBgColor, width: 200, height: 200, fontSize: '5rem'\r\n            }}\r\n          >\r\n            {userData.username?.charAt(0).toUpperCase() || ''}\r\n          </Avatar>\r\n          <form className=\"avatar-form\" onSubmit={handleAvatarChange}>\r\n            <label htmlFor=\"file\">\r\n              <div className=\"avatar-input\">파일 업로드</div>\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              id=\"file\"\r\n              accept=\".png,.jpg,.jpeg\"\r\n              onChange={handleFileChange}\r\n              required\r\n            />\r\n            <button className=\"avatar-button\" type=\"submit\">\r\n              변경\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"user-container\">\r\n          <div className=\"name-container\">\r\n            <label>Name : {userData.username}</label>\r\n          </div>\r\n          <div className=\"username-container\">\r\n            <label>ID : {userData.username}</label>\r\n          </div>\r\n          <div className=\"email-container\">\r\n            <label>Email : {userData.email}</label>\r\n          </div>\r\n          <div className=\"exp-container\">\r\n            <label>EXP : {userData.exp}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modify-container\">\r\n        <form className=\"name-form\" onSubmit={handleNameChange}>\r\n          <h3>이름 변경</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"새 이름\"\r\n            required\r\n          />\r\n          <div className=\"button-container\">\r\n            <button className=\"name-button\" type=\"submit\">\r\n              변경\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <form className=\"password-form\" onSubmit={handlePasswordChange}>\r\n          <h3>비밀번호 변경</h3>\r\n          <input\r\n            type=\"password\"\r\n            value={oldPassword}\r\n            onChange={(e) => setOldPassword(e.target.value)}\r\n            placeholder=\"기존 비밀번호\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            placeholder=\"새 비밀번호\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            placeholder=\"새 비밀번호 확인\"\r\n            required\r\n          />\r\n          <div className=\"button-container\">\r\n            <button className=\"password-button\" type=\"submit\">\r\n              변경\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfoForm;","import React, { useState, FormEvent } from 'react';\r\nimport { updateUsertoAdmin } from '../../api/axiosUser';\r\nimport '../../assets/scss/mypage/toAdmin.scss';\r\n\r\n/**\r\n * Component for upgrading a user to admin status.\r\n */\r\nconst ToAdmin: React.FC = () => {\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  /**\r\n   * Handles the form submission to upgrade user permissions.\r\n   * @param e - The form event.\r\n   */\r\n  const handleToAdmin = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await updateUsertoAdmin(password);\r\n      alert(response.message);\r\n      setPassword('');\r\n      //refresh\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Error updating user permissions:', error);\r\n      alert('관리자 권한 업데이트에 실패했습니다. 다시 시도해주세요.');\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"toAdmin-container\">\r\n      <form className=\"toAdmin-form\" onSubmit={handleToAdmin}>\r\n        <h2>관리자 권한 획득</h2>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"관리자 비밀번호\"\r\n          required\r\n        />\r\n        <button className=\"toAdmin-button\" type=\"submit\">\r\n          확인\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToAdmin;","import React, { useState } from 'react';\r\nimport { checkPassword } from '../../api/axiosUser';\r\nimport PasswordCheckForm from '../../components/mypage/PasswordCheckForm';\r\nimport PersonalInfoForm from '../../components/mypage/PersonalInfoForm';\r\nimport ToAdmin from '../../components/mypage/toAdmin';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Main from '../../components/main/Main';\r\nimport '../../assets/scss/mypage/toAdmin.scss';\r\n\r\n/**\r\n * Component representing the user's personal page.\r\n */\r\nconst MyPage: React.FC = () => {\r\n  const [isPasswordVerified, setIsPasswordVerified] = useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * Handles the password verification process.\r\n   * @param password - The password entered by the user.\r\n   */\r\n  const handlePasswordCheck = async (password: string): Promise<void> => {\r\n    try {\r\n      await checkPassword(password);\r\n      setIsPasswordVerified(true);\r\n    } catch (error) {\r\n      console.error('Password check failed:', error);\r\n      alert('비밀번호가 일치하지 않습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <div className=\"mypage-container\">\r\n        <div className=\"upper-container\">\r\n          <div className=\"back-btn-container\">\r\n            <button\r\n              className=\"back-button\"\r\n              onClick={() => navigate('/')}\r\n              aria-label=\"Back to Home\"\r\n            ></button>\r\n          </div>\r\n          <h1>마이페이지</h1>\r\n        </div>\r\n        {!isPasswordVerified ? (\r\n          <PasswordCheckForm onSubmit={handlePasswordCheck} />\r\n        ) : (\r\n          <>\r\n            <PersonalInfoForm />\r\n            <ToAdmin />\r\n          </>\r\n        )}\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n\r\n"],"names":["PasswordCheckForm","onSubmit","password","setPassword","useState","handleSubmit","e","jsxs","jsx","axiosMulti","axios","updateUserAvatar","avatar","PersonalInfoForm","userData","setUserData","username","setUsername","newPassword","setNewPassword","oldPassword","setOldPassword","confirmNewPassword","setConfirmNewPassword","setAvatar","fetchUserDetail","response","getUserDetail","error","useEffect","handlePasswordChange","changePassword","handleNameChange","changeName","handleAvatarChange","handleFileChange","avatarColorIndex","getAvatarColorIndex","avatarBgColor","avatarBackgroundColors","Avatar","ToAdmin","handleToAdmin","updateUsertoAdmin","MyPage","isPasswordVerified","setIsPasswordVerified","navigate","useNavigate","handlePasswordCheck","checkPassword","Main","Fragment"],"mappings":"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"}