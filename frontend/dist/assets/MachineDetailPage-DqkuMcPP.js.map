{"version":3,"file":"MachineDetailPage-DqkuMcPP.js","sources":["../../src/components/machine/MachineDetail.tsx","../../src/components/machine/MachineReviewList.tsx","../../src/pages/machine/MachineDetailPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { MachineDetail as MachineDetailType } from '../../types/Machine';\r\nimport '../../assets/scss/machine/MachineDetail.scss';\r\nimport Rating from '@mui/material/Rating';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { avatarBackgroundColors, getAvatarColorIndex } from '../../utils/avatars';\r\n/**\r\n * Props interface for MachineDetail component.\r\n */\r\ninterface MachineDetailProps {\r\n  machineDetail: MachineDetailType;\r\n}\r\n\r\n/**\r\n * A component to display the details of a machine.\r\n * \r\n * @param {MachineDetailProps} props - The props for the MachineDetail component.\r\n * @returns {JSX.Element} The rendered MachineDetail component.\r\n */\r\nconst MachineDetail: React.FC<MachineDetailProps> = ({ machineDetail }) => {\r\n  const { _id, name, category, description, exp, rating } = machineDetail;\r\n\r\n  const avatarColorIndex = getAvatarColorIndex(name);\r\n  const avatarBgColor = avatarBackgroundColors[avatarColorIndex];\r\n\r\n  return (\r\n    <div className=\"machine-detail-container\">\r\n      <div className=\"machine-detail\">\r\n        <Avatar\r\n          sx={{\r\n            backgroundColor: avatarBgColor,\r\n            width: 150,\r\n            height: 150,\r\n            margin: '0 auto 20px auto',\r\n            fontSize: '3rem'\r\n          }}\r\n        >\r\n          {name.charAt(0).toUpperCase()}\r\n        </Avatar>\r\n        <h3>Machine Details</h3>\r\n        <p className=\"machine-name\"><strong>Name:</strong> {name}</p>\r\n        <p><strong>Description:</strong> {description || 'N/A'}</p>\r\n        <p><strong>Experience Points (EXP):</strong> {exp || 0}</p>\r\n        <p><strong>Category:</strong> {category || 'N/A'}</p>\r\n        <p><strong>Rating:</strong> \r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              marginTop: '8px',\r\n              marginBottom: '8px',\r\n            }}\r\n          >\r\n            <Rating\r\n              name={`read-only-rating-${_id}`}\r\n              value={Number(rating)}\r\n              precision={0.5}\r\n              readOnly\r\n            />\r\n            <span style={{ marginLeft: '8px', color: '#555' }}>{rating.toFixed(1)}</span>\r\n          </Box>\r\n        </p>\r\n        <p><strong>Rewards:</strong> {exp || 0} EXP</p>\r\n        {/* <p><strong>AMI ID:</strong> {amiId || 'N/A'}</p> */}\r\n        {/* Add more fields as necessary */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getMachineReviews } from '../../api/axiosMachine';\r\nimport '../../assets/scss/machine/MachineReviewList.scss';\r\nimport Rating from '@mui/material/Rating';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { Review } from '../../types/Machine';\r\nimport '../../assets/scss/machine/MachineReviewList.scss';\r\n\r\ninterface MachineReviewListProps {\r\n  machineId: string;\r\n}\r\n\r\nconst MachineReviewList: React.FC<MachineReviewListProps> = ({ machineId }) => {\r\n  const [reviews, setReviews] = useState<Review[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      if (!machineId) {\r\n        setError('Machine ID is missing.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const data = await getMachineReviews(machineId);\r\n        setReviews(data.reviews);\r\n        setLoading(false);\r\n      } catch (error: any) {\r\n        setError(`Error fetching reviews: ${error.msg}`);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchReviews();\r\n  }, [machineId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='machine-review-list'>\r\n      <h3>Reviews</h3>\r\n      <table className='machine-review-table'>\r\n        {reviews.length === 0 ? (\r\n          <tbody>\r\n            <tr>\r\n              <td colSpan={3} className='no-data'>No reviews available.</td>\r\n            </tr>\r\n          </tbody>\r\n        ) : (\r\n          <>\r\n            <thead>\r\n              <tr>\r\n                <th className='machine-review-username'>Username</th>\r\n                <th className='machine-review-rating'>Rating</th>\r\n                <th className='machine-review-comment'>Comment</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {reviews.map((review) => (\r\n                <tr key={review._id}>\r\n                  <td>{review.reviewerName}</td>\r\n                  <td>\r\n                    <Box\r\n                      sx={{\r\n                        '& > legend': { mt: 2 },\r\n                      }}\r\n                    >\r\n                      <Rating\r\n                        name={`read-only-rating-${review._id}`}\r\n                        value={Number(review.rating)}\r\n                        precision={0.5}\r\n                        readOnly\r\n                      />\r\n                    </Box>\r\n                  </td>\r\n                  <td>{review.content}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </>\r\n        )}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineReviewList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport MachineDetail from '../../components/machine/MachineDetail';\r\nimport Main from '../../components/main/Main';\r\nimport { getActiveMachineDetails, startPlayingMachine } from '../../api/axiosMachine';\r\nimport { MachineDetail as MachineDetailType } from '../../types/Machine';\r\nimport '../../assets/scss/machine/MachineDetailPage.scss';\r\nimport MachineReviewList from '../../components/machine/MachineReviewList';\r\n\r\n/**\r\n * Component representing the Machine Detail Page.\r\n * \r\n * @returns {JSX.Element} The rendered MachineDetailPage component.\r\n */\r\nconst MachineDetailPage: React.FC = () => {\r\n  const { machineId } = useParams<{ machineId: string }>();\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  const [machineDetail, setMachineDetail] = useState<MachineDetailType | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  /**\r\n   * Fetches the machine details from the API.\r\n   */\r\n  useEffect(() => {\r\n    const fetchMachineDetail = async () => {\r\n      if (!machineId) {\r\n        setError('Machine ID is missing.');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await getActiveMachineDetails(machineId);\r\n        setMachineDetail(response.machine);\r\n      } catch (error: any) {\r\n        console.error('Error fetching machine details:', error.message || error);\r\n        setError('Failed to fetch machine details.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMachineDetail();\r\n  }, [machineId]);\r\n\r\n  /**\r\n   * Handles navigation to the play page.\r\n   */\r\n  const handlePlay = async () => {\r\n    if (machineDetail && machineDetail._id) {\r\n      await startPlayingMachine(machineDetail._id);\r\n      navigate(`/machine/${machineDetail._id}/play`);\r\n    } else {\r\n      alert('Invalid machine details.');\r\n    }\r\n  };\r\n\r\n  const handleRegisterReview = () => {\r\n    if (machineId) {\r\n      navigate(`/machine/${machineId}/review/new`);\r\n    } else {\r\n      alert('Invalid machine ID.');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Main title=\"Machine Detail\" description=\"Loading machine details.\">\r\n        <div className=\"machine-detail-page loading\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      </Main>\r\n    );\r\n  }\r\n\r\n  if (error || !machineDetail) {\r\n    return (\r\n      <Main title=\"Machine Detail\" description=\"Failed to load machine details.\">\r\n        <div className=\"machine-detail-page error\">\r\n          <p className=\"error-message\">{error || 'Machine not found.'}</p>\r\n        </div>\r\n      </Main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Main title=\"Machine Detail\" description=\"Machine Detail 화면입니다.\">\r\n      <div className='machine-detail-page-container'>\r\n        <div className=\"machine-detail-page\">\r\n          <MachineDetail machineDetail={machineDetail} />\r\n          <button onClick={handlePlay} className=\"play-button\">\r\n            Play\r\n          </button>\r\n        </div>\r\n        <div className='machine-detail-page-review'>\r\n          <MachineReviewList machineId={machineId || ''} />\r\n        </div>\r\n        <div className='machine-detail-page-new-review'>\r\n          <button onClick={handleRegisterReview} className='machine-detail-page-new-review-button'>\r\n            Add New Review\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default MachineDetailPage;"],"names":["MachineDetail","machineDetail","_id","name","category","description","exp","rating","avatarColorIndex","getAvatarColorIndex","avatarBgColor","avatarBackgroundColors","jsxs","jsx","Avatar","Box","Rating","MachineReviewList","machineId","reviews","setReviews","useState","loading","setLoading","error","setError","useEffect","data","getMachineReviews","Fragment","review","MachineDetailPage","useParams","navigate","useNavigate","setMachineDetail","isLoading","setIsLoading","response","getActiveMachineDetails","handlePlay","startPlayingMachine","handleRegisterReview","Main"],"mappings":"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"}