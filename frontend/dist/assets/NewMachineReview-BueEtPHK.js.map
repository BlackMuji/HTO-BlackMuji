{"version":3,"file":"NewMachineReview-BueEtPHK.js","sources":["../../src/components/machine/MachineReviewForm.tsx","../../src/pages/machine/NewMachineReview.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { postMachineReview } from '../../api/axiosMachine';\r\nimport { Review } from '../../types/Machine';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport Rating from '@mui/material/Rating';\r\nimport Box from '@mui/material/Box';\r\nimport '../../assets/scss/machine/MachineReviewForm.scss';\r\n\r\ninterface MachineReviewFormProps {\r\n  onReviewAdded: (review: Review) => void;\r\n  machineId: string;\r\n}\r\n\r\ninterface FormData {\r\n  rating: number;\r\n  review: string;\r\n}\r\n\r\nconst MachineReviewForm: React.FC<MachineReviewFormProps> = ({ machineId, onReviewAdded }) => {\r\n  const [formData, setFormData] = useState<FormData>({\r\n    rating: 0,\r\n    review: '',\r\n  });\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const reviewContentRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const { rating, review } = formData;\r\n\r\n  const adjustTextareaHeight = () => {\r\n    if (reviewContentRef.current) {\r\n      reviewContentRef.current.style.height = 'auto';\r\n      reviewContentRef.current.style.width = '100%';\r\n      reviewContentRef.current.style.height = `${reviewContentRef.current.scrollHeight}px`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    adjustTextareaHeight();\r\n  }, [review]);\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: name === 'rating' ? parseFloat(value) : value,\r\n    }));\r\n  };\r\n\r\n  const handleRatingChange = (_event: React.SyntheticEvent, newValue: number | null) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      rating: newValue || 0,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    // Validate rating\r\n    if (rating < 1.0 || rating > 5.0) {\r\n      setError('Rating must be between 1.0 and 5.0.');\r\n      return;\r\n    }\r\n\r\n    // Validate one decimal place\r\n    if (!Number.isInteger(rating * 10)) {\r\n      setError('Rating must have at most one decimal place.');\r\n      return;\r\n    }\r\n\r\n    if (!review.trim()) {\r\n      setError('Please write your review.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const newReview = await postMachineReview(machineId, formData);\r\n      onReviewAdded(newReview);\r\n      setFormData({ rating: 0, review: '' });\r\n      navigate(`/machine/${machineId}`);\r\n    } catch (err: any) {\r\n      if (err.response && err.response.data && err.response.data.msg) {\r\n        setError(`Error submitting review: ${err.response.data.msg}`);\r\n      } else if (err.msg) {\r\n        setError(`Error submitting review: ${err.msg}`);\r\n      } else {\r\n        setError('Error submitting review: Unknown error.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='machine-review-form' onSubmit={handleSubmit}>\r\n      <h2>New Review</h2>\r\n      \r\n      {error && <p className='error-message'>{error}</p>}\r\n      \r\n      <div className='machine-review-form-rating'>\r\n        <label htmlFor='rating' className='rating'>Rating</label>\r\n        <Box\r\n          sx={{\r\n            '& > legend': { mt: 2 },\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"rating\"\r\n            className=\"test\"\r\n            value={rating}\r\n            precision={0.5}\r\n            onChange={handleRatingChange}\r\n          />\r\n        </Box>\r\n      </div>\r\n      \r\n      <div className='machine-review-form-content'>\r\n        <label htmlFor='review'>Comment</label>\r\n        <textarea \r\n          ref={reviewContentRef} \r\n          id='review' \r\n          name='review' \r\n          value={review} \r\n          placeholder='Please write your review here'\r\n          onChange={handleChange} \r\n          required \r\n        />\r\n      </div>\r\n      \r\n      <button className='machine-review-form-submit' type='submit' disabled={loading}>\r\n        {loading ? 'Submitting...' : 'Submit'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MachineReviewForm;","import React from 'react';\r\nimport MachineReviewForm from '../../components/machine/MachineReviewForm';\r\nimport { useParams } from 'react-router-dom';\r\nimport Main from '../../components/main/Main';\r\nconst NewMachineReview: React.FC = () => {\r\n    const { machineId } = useParams();\r\n    return (\r\n        <Main>\r\n            <MachineReviewForm machineId={machineId || ''} onReviewAdded={() => {}} />\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default NewMachineReview;"],"names":["MachineReviewForm","machineId","onReviewAdded","formData","setFormData","useState","loading","setLoading","error","setError","navigate","useNavigate","reviewContentRef","useRef","rating","review","adjustTextareaHeight","useEffect","handleChange","e","name","value","prevData","handleRatingChange","_event","newValue","handleSubmit","newReview","postMachineReview","err","jsxs","jsx","Box","Rating","NewMachineReview","useParams","Main"],"mappings":"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"}