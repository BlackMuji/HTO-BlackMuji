import{ag as s}from"./index-CivGSquN.js";const a=async()=>{try{return(await s.get("/contest/")).data}catch(e){throw e.response?e.response.data:new Error("Failed to fetch contests")}},c=async e=>{try{return(await s.post("/contest/",e)).data}catch(t){throw t.response?t.response.data:new Error("Failed to create contest")}},p=async e=>{try{return(await s.post(`/contest/${e}/participate`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to participate in contest")}},i=async(e,t,r)=>{try{return(await s.post(`/contest/${e}/${t}/submit-flag`,{flag:r})).data}catch(o){throw o.response?o.response.data:new Error("Failed to submit flag for contest")}},d=async(e,t)=>{try{return(await s.get(`/contest/${e}/${t}/hints`)).data}catch(r){throw r.response?r.response.data:new Error("Failed to fetch hints for contest")}},w=async e=>{try{return(await s.delete(`/contest/${e}`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to delete contest")}},h=async e=>{try{return(await s.get(`/contest/${e}/leaderboard`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to fetch leaderboard by contest")}},y=async e=>{try{return(await s.get(`/contest/${e}/status`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to fetch contest status")}},l=async e=>{try{return(await s.get(`/contest/${e}`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to fetch contest details")}},u=async e=>{try{return(await s.post(`/contest/${e}/active`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to activate contest")}},g=async e=>{try{return(await s.post(`/contest/${e}/deactive`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to deactivate contest")}},F=async()=>{try{return(await s.get("/contest/active")).data}catch(e){throw e.response?e.response.data:new Error("Failed to fetch active contests")}},C=async(e,t)=>{try{return(await s.get(`/contest/${e}/${t}/used-hints`)).data}catch(r){throw r.response?r.response.data:new Error("Failed to fetch used hints in contest")}},E=async e=>{try{return(await s.post(`/contest/${e}/give-up`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to give up contest")}},$=async e=>{try{return(await s.get(`/contest/${e}/my-rank`)).data}catch(t){throw t.response?t.response.data:new Error("Failed to fetch my rank in contest")}};export{u as A,g as D,l as a,h as b,$ as c,y as d,c as e,C as f,F as g,d as h,E as i,a as j,w as k,p,i as s};
//# sourceMappingURL=axiosContest-a7qLFL0E.js.map
