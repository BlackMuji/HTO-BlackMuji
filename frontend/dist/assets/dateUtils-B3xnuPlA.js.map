{"version":3,"file":"dateUtils-B3xnuPlA.js","sources":["../../src/utils/dateUtils.tsx"],"sourcesContent":["/**\r\n * Formats a date string into \"YYYY-MM-DD HH:mm\" format.\r\n * @param dateString - The date string to format.\r\n * @returns The formatted date string.\r\n * @throws Will throw an error if the provided date string is invalid.\r\n */\r\nexport const formatDate = (dateString: string | Date): string => {\r\n    const date = new Date(dateString);\r\n  \r\n    if (isNaN(date.getTime())) {\r\n      throw new Error('Invalid date string provided.');\r\n    }\r\n  \r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  \r\n    return `${year}/${month}/${day} ${hours}:${minutes}`;\r\n  };\r\n  \r\n  export default formatDate;"],"names":["formatDate","dateString","date","year","month","day","hours","minutes"],"mappings":"AAMa,MAAAA,EAAcC,GAAsC,CACvD,MAAAC,EAAO,IAAI,KAAKD,CAAU,EAEhC,GAAI,MAAMC,EAAK,QAAQ,CAAC,EAChB,MAAA,IAAI,MAAM,+BAA+B,EAG3C,MAAAC,EAAOD,EAAK,YAAY,EACxBE,EAAQ,OAAOF,EAAK,SAAA,EAAa,CAAC,EAAE,SAAS,EAAG,GAAG,EACnDG,EAAM,OAAOH,EAAK,QAAS,CAAA,EAAE,SAAS,EAAG,GAAG,EAC5CI,EAAQ,OAAOJ,EAAK,SAAU,CAAA,EAAE,SAAS,EAAG,GAAG,EAC/CK,EAAU,OAAOL,EAAK,WAAY,CAAA,EAAE,SAAS,EAAG,GAAG,EAElD,MAAA,GAAGC,CAAI,IAAIC,CAAK,IAAIC,CAAG,IAAIC,CAAK,IAAIC,CAAO,EACpD"}