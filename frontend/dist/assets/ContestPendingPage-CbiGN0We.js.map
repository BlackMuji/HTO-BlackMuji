{"version":3,"file":"ContestPendingPage-CbiGN0We.js","sources":["../../src/pages/contest/ContestPendingPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport { getContestStatus } from '../../api/axiosContest';\r\nimport { formatDate } from '../../utils/dateUtils';\r\nimport Modal from '../../components/modal/Modal';\r\ninterface GetContestStatusResponse {\r\n  contestName: string;\r\n  isActive: boolean;\r\n  startTime: Date;\r\n  endTime: Date;\r\n}\r\n\r\nconst ContestPendingPage: React.FC = () => {\r\n  const { contestId } = useParams<{ contestId: string }>();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const [contestStatus, setContestStatus] = useState<GetContestStatusResponse | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchContestStatus = async () => {\r\n      try {\r\n        if (!contestId) {\r\n          throw new Error('Contest ID is missing');\r\n        }\r\n        const response: GetContestStatusResponse = await getContestStatus(contestId);\r\n        setContestStatus(response);\r\n      } catch (error: any) {\r\n        setError(error.message || error);\r\n        console.error('Error fetching contest status:', error.message || error);\r\n      }\r\n    };\r\n    fetchContestStatus();\r\n  }, [contestId]);\r\n\r\n  const handleClose = () => {\r\n    navigate(`/contest/${contestId}`);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={true} onClose={handleClose}>\r\n      {contestStatus && (\r\n        <>\r\n          <h2>Contest Pending</h2>\r\n          <p>Contest Name: {contestStatus.contestName}</p>\r\n          <p>Status: {contestStatus.isActive ? 'Active' : 'Inactive'}</p>\r\n          <p>Start Time: {formatDate(contestStatus.startTime)}</p>\r\n          <p>End Time: {formatDate(contestStatus.endTime)}</p>\r\n          <p>Contest is not started yet. Please wait for the contest to start.</p>\r\n          <button><Link to={`/contest/${contestId}`}>View Contest</Link></button>\r\n        </>\r\n      )}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContestPendingPage;\r\n"],"names":["ContestPendingPage","contestId","useParams","navigate","useNavigate","contestStatus","setContestStatus","useState","error","setError","useEffect","response","getContestStatus","handleClose","jsxs","Modal","Fragment","jsx","formatDate","Link"],"mappings":"iKAYA,MAAMA,EAA+B,IAAM,CACnC,KAAA,CAAE,UAAAC,CAAU,EAAIC,EAAiC,EACjDC,EAA6BC,EAAY,EACzC,CAACC,EAAeC,CAAgB,EAAIC,EAAAA,SAA0C,IAAI,EAClF,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAwB,IAAI,EAEtDG,EAAAA,UAAU,IAAM,EACa,SAAY,CACjC,GAAA,CACF,GAAI,CAACT,EACG,MAAA,IAAI,MAAM,uBAAuB,EAEnC,MAAAU,EAAqC,MAAMC,EAAiBX,CAAS,EAC3EK,EAAiBK,CAAQ,QAClBH,EAAY,CACVA,EAAAA,EAAM,SAAWA,CAAK,EAC/B,QAAQ,MAAM,iCAAkCA,EAAM,SAAWA,CAAK,CAAA,CAE1E,GACmB,CAAA,EAClB,CAACP,CAAS,CAAC,EAEd,MAAMY,EAAc,IAAM,CACfV,EAAA,YAAYF,CAAS,EAAE,CAClC,EAEA,OACGa,EAAAA,KAAAC,EAAA,CAAM,OAAQ,GAAM,QAASF,EAC3B,SAAA,CAAAR,GAEGS,EAAA,KAAAE,WAAA,CAAA,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAe,iBAAA,CAAA,SAClB,IAAE,CAAA,SAAA,CAAA,iBAAeZ,EAAc,WAAA,EAAY,SAC3C,IAAE,CAAA,SAAA,CAAA,WAASA,EAAc,SAAW,SAAW,UAAA,EAAW,SAC1D,IAAE,CAAA,SAAA,CAAA,eAAaa,EAAWb,EAAc,SAAS,CAAA,EAAE,SACnD,IAAE,CAAA,SAAA,CAAA,aAAWa,EAAWb,EAAc,OAAO,CAAA,EAAE,EAChDY,EAAAA,IAAC,KAAE,SAAiE,mEAAA,CAAA,EACpEA,EAAAA,IAAC,UAAO,SAACA,EAAA,IAAAE,EAAA,CAAK,GAAI,YAAYlB,CAAS,GAAI,SAAA,cAAY,CAAA,CAAO,CAAA,CAAA,EAChE,EAEDO,GAASS,EAAA,IAAC,MAAI,CAAA,UAAU,gBAAiB,SAAMT,CAAA,CAAA,CAAA,EAClD,CAEJ"}